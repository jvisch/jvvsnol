lists

[1,2,3,4,5]

[1...10] becomes [1,2,3,4,5,6,7,8,9,10]
[1...10> becomes [1,2,3,4,5,6,7,8,9]
<1...10] becomes [2,3,4,5,6,7,8,9,10]
<1...10> becomes [2,3,4,5,6,7,8,9]

[1...10:2] becomes [1,3,5,7,9] (step 2)
<1...10:2> becomes [2,4,6,8,10] (step 2)


[true, true, false, false] & [true, false, treu, false] becomes [true, false, false, false]
[true, true, false, false] | [true, false, treu, false] becomes [true, true, true, false]
[true, true, false, false] = [true, false, treu, false] becomes [true, false, false, true]
[true, true, false, false] ^ [true, false, treu, false] becomes [false, true, true, false]

[true, true, false, false]! becomes [false, false, true, true]

variabelen
-----------
var <- 10
10 -> var (identical!)

var <- [1,2,3,4]
[1,2,3,4] -> var


operators
---------
plus
[1,2,3,4]+     becomes 1+2+3+4 results to 10
[1,2,3,4]+(3)  becomes [1+3, 2+3, 3+3, 4+3] results to [4,5,6,7]
[1,2,3,4]+[1,2,3,4] becomes [1+1, 2+2, 3+3, 4+4] results to [2,4,6,8]

min
[1,2,3,4]-(2)   becomes [1-2,2-2,3-2,4-2] results to [-1,0,1,2]
[1,2,3,4]-[1,2,3,4] becomes [1-1, 2-2, 3-3, 4-4] results to [0,0,0,0]

times
[1,2,3,4]*(2)   every element *2
[1,2,3,4]*[1,2,3,4] every element times corresponding element [1*1, 2*2, 3*3, 4*4] results to [1, 4, 9 16]

delen 
[1,2,3,4]/(2)  every element / 2
[1,2,3,4]/[1,2,3,4] every element devided by every other element

modulo
[1,2,3,4]%(2)  every element modulo 2
[1,2,3,4]%[1,2,3,4] every element modulo other element

gelijk aan
[1,2,3,4]=(2) every element equal 2?  result [false, true, false, true]
[1,2,3,4]=[1,2,3,4] every element equal to [true, true, true, true]

filter
[1,2,3,4]?[true, false, false, true] -> filter op true result: [1, 4] (1e en 4e element true)

Comments
# the comment (like python)


Example
---------
[1-1000> -> numbers     # [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11  --  997, 998, 999]

numbers%(3) -> rest3    # [1, 2, 0, 1, 2, 0, 1, 2, 0,  1,  2  --    1,   2,   0]
rest3=(0) -> dividable3 # [F, F, T, F, F, T, F, F, T,  F,  F, --    F,   F,   T]

numbers%(5) -> rest5    # [1, 2, 3, 4, 0, 1, 2, 3, 4,  0,  1  --    2,   3,   4]
rest5=(0) -> dividable5 # [F, F, F, F, T, F, F, F, F,  T,  F  --    F,   F,   F]

dividable3|dividable5 -> both  # [F, F, T, F, F, T, F, F, T,  F,  F, --    F,   F,   T]
                               # [F, F, F, F, T, F, F, F, F,  T,  F  --    F,   F,   F] 
                               # ------------------------------------------------------ |
                               # [F, F, T, F, T, T, F, F, T,  T,  F, --    F,   F,   T]

numbers?both -> values  #  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11  --  997, 998, 999]
                        #  [F, F, T, F, T, T, F, F, T,  T,  F, --    F,   F,   T] ?
                        #  ------------------------------------------------------
                        #  [      3,    5, 6,       9, 10,     --            999]

values+   # the result [3, 5, 6, 9, 10,  --  999]+  results in *a big number* 